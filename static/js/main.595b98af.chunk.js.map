{"version":3,"sources":["utils/date.js","utils/request.js","App.js","serviceWorker.js","index.js"],"names":["parse","str","Error","Date","d","toString","call","date","getTime","parseDate","format","patern","arguments","length","undefined","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","map","YY","substr","YYYY","M","MM","D","DD","H","HH","h","hh","m","mm","s","ss","replace","_","p","ONE_DAY","TEN_MINUTE","friendly","now","today","setHours","diff","diffDays","Math","floor","diffYears","concat","Object","prototype","re","invalid","match","exec","slice","v","parseInt","UTC","time","host","process","REACT_APP_ENV","request","path","options","url","window","fetch","then","res","json","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","state","notebooks","currentBookIndex","notes","currentNote","_this2","addEventListener","data","currentNoteId","id","localStorage","setItem","JSON","stringify","getItem","setState","loadNotebooks","_this3","react_default","a","createElement","className","onClick","addNote","notebook","index","key","cx","active","loadNotes","name","note","loadNote","title","body","dateUtil","datetime","deleteNote","getNoteBook","notebookId","type","value","onChange","e","updateNote","target","dangerouslySetInnerHTML","__html","marked","editData","_this4","bookIndex","_this5","book","_this6","console","log","bookId","find","field","opts","method","headers","Content-Type","_this7","currentBook","reloadNotes","_this8","Swal","fire","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","doDeleteNote","_this9","Component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.595b98af.chunk.js","sourcesContent":["export function parse(str) {\n  if (!str) {\n    throw new Error('invalid date, receive null');\n  }\n  if (typeof str === 'number') {\n    return new Date(str);\n  }\n\n  if (isDate(str)) {\n    return str;\n  }\n\n  const date = new Date(str);\n  if (date.getTime()) {\n    return date;\n  }\n  return parseDate(str);\n}\n\n\n/**\n * @see http://momentjs.com/docs/#/displaying/format/\n */\nexport function format(date, patern = 'YYYY-MM-DD') {\n  date = parse(date);\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  const hour = date.getHours();\n  const minute = date.getMinutes();\n  const second = date.getSeconds();\n  const map = {\n    YY: ('' + year).substr(-2),\n    YYYY: '' + year,\n    M: '' + month,\n    MM: ('0' + month).substr(-2),\n    D: '' + day,\n    DD: ('0' + day).substr(-2),\n    H: '' + hour,\n    HH: ('0' + hour).substr(-2),\n    h: '' + (hour % 12),\n    hh: ('0' + (hour % 12)).substr(-2),\n    m: '' + minute,\n    mm: ('' + minute).substr(-2),\n    s: '' + second,\n    ss: ('0' + second).substr(-2)\n  };\n  return patern.replace(/([a-zA-Z]+)/g, (_, p) => map[p] || p);\n}\n\n\nconst ONE_DAY = 3600 * 24 * 1000;\nconst TEN_MINUTE = 10 * 60 * 1000;\nexport function friendly(date) {\n  date = parse(date);\n  if (Date.now() - date.getTime() < TEN_MINUTE) {\n    return '刚刚';\n  }\n\n  const today = new Date();\n  today.setHours(23, 59, 59, 999);\n  const diff = today.getTime() - date.getTime();\n  const diffDays = Math.floor(diff / ONE_DAY);\n  const diffYears = today.getFullYear() - date.getFullYear();\n  const labels = ['今天', '昨天', '前天'];\n  const pattern = labels[diffDays] ||\n        (diffYears === 0 ? 'M月D日' : 'YYYY年M月D日');\n  return format(date, `${pattern} H:m`);\n}\n\n\nexport default { parse, format, friendly };\n\n\nconst toString = Object.prototype.toString;\nfunction isDate(d) {\n  return d && toString.call(d) === '[object Date]';\n}\n\n\n/**\n * @see https://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15\n */\n// YYYY-MM-DDTHH:mm:ss.sssZ\nconst re = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})\\.(\\d{3})([-+]\\d{4})$/;\nconst invalid = new Date('invalid');\nfunction parseDate(str) {\n  const match = re.exec(str);\n  if (!match) {\n    return invalid;\n  }\n  const m = match.slice(1, 8).map(v => parseInt(v, 10));\n  const d = new Date(Date.UTC(m[0], m[1] - 1, m[2], m[3], m[4], m[5]));\n  const z = parseInt(match[8], 10);\n  // exp +0800 -> should minus 8 hours\n  const diff = z / 100 * 3600 * 1000;  // to milliseconds\n  const time = d.getTime() - diff;\n  return new Date(time);\n}\n\n\nconst $test = { parseDate };\nexport { $test };","const env = process.env.REACT_APP_ENV || process.env.NODE_ENV;\n\nconst host = env === 'development' ?\n    'http://localhost:4000' :\n    'https://my-json-server.typicode.com/qingguatang/fe-react-evernote';\n\nexport default function(path, options) {\n  const url = host + path;\n  return window.fetch(url, options).then(res => res.json());\n}","import React, { Component } from 'react';\nimport 'normalize.css';\nimport 'github-markdown-css';\nimport marked from 'marked';\nimport cx from 'classnames';\nimport Swal from 'sweetalert2';\nimport dateUtil from './utils/date';\nimport request from './utils/request';\nimport './App.scss';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      notebooks: [],\n\n      currentBookIndex: 0,\n      notes: [],\n\n      currentNote: null\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('beforeunload', () => {\n      var data = {\n        currentBookIndex: this.state.currentBookIndex,\n        currentNoteId: this.state.currentNote ? this.state.currentNote.id : null\n      };\n      localStorage.setItem('evernoteEditData', JSON.stringify(data));\n    });\n\n    var json = localStorage.getItem('evernoteEditData');\n    if (json) {\n      var data = JSON.parse(json);\n      this.setState({ currentBookIndex: data.currentBookIndex });\n    }\n    this.loadNotebooks(data);\n  }\n\n  render() {\n    var notebooks = this.state.notebooks;\n    var notes = this.state.notes;\n    var currentNote = this.state.currentNote;\n    // if (!notebooks) {\n    //   return null;\n    // }\n\n    return (\n      <div className=\"app\">\n        <div className=\"sidebar\">\n          <div className=\"header\">\n            <button className=\"button adder\" onClick={() => this.addNote()}>\n              <i className=\"iconfont icon-add\"></i>\n              新建笔记\n            </button>\n          </div>\n          <div className=\"body\">\n            <div className=\"notebooks\">\n              <div className=\"header has-icon\">\n                <i className=\"iconfont icon-books\"></i>\n                笔记本\n              </div>\n              <div className=\"body\">\n                <ul className=\"notebooks-list\">\n                {notebooks.map((notebook, index) => (\n                  <li key={notebook.id}\n                      className={cx('notebook-item', { active: this.state.currentBookIndex === index })}\n                      onClick={() => this.loadNotes(index)}>\n                    <div className=\"title has-icon\">\n                      <i className=\"iconfont icon-book\"></i>\n                      {notebook.name}\n                    </div>\n                    <button className=\"button trash\"><i className=\"iconfont icon-trash\"></i></button>\n                  </li>\n                ))}\n              </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"notes-panel\">\n          <div className=\"header\">读书笔记</div>\n          <div className=\"body\">\n            <ul className=\"notes-list\">\n            {\n              notes.map(note => (\n              <li key={note.id}>\n                <div className={cx('note-brief', { active: currentNote && currentNote.id === note.id })}>\n                  <div className=\"box\"\n                      onClick={() => this.loadNote(note.id)}>\n                    <div className=\"header\">{note.title}</div>\n                    <div className=\"body\">\n                    {getBrief(note.body)}\n                    </div>\n                  </div>\n                  <div className=\"footer\">\n                    <div className=\"datetime\">{dateUtil.friendly(note.datetime)}</div>\n                    <button className=\"trash button\" onClick={() => this.deleteNote(note.id)}>\n                      <i className=\"iconfont icon-trash\"></i>\n                    </button>\n                  </div>\n                </div>\n              </li>\n              ))\n            }\n            </ul>\n          </div>\n        </div>\n        {currentNote ?\n        <div className=\"note-panel\">\n          <div className=\"header\">\n            <div className=\"category has-icon\">\n              <i className=\"iconfont icon-notebook\"></i>\n              {this.getNoteBook(currentNote.notebookId).name}\n            </div>\n            <div className=\"title\">\n              <input type=\"text\" value={currentNote.title || ''}\n                onChange={e => this.updateNote('title', e.target.value)} />\n            </div>\n          </div>\n          <div className=\"body\">\n            <div className=\"editor\">\n              <textarea value={currentNote.body}\n                onChange={e => this.updateNote('body', e.target.value)}></textarea>\n            </div>\n            <div className=\"preview markdown-body\">\n              <div dangerouslySetInnerHTML={{ __html: marked(currentNote.body || '') }}></div>\n            </div>\n          </div>\n        </div> : null\n        }\n      </div>\n    );\n  }\n\n  loadNotebooks(editData) {\n    editData = editData || {};\n    request('/notebooks')\n      .then(notebooks => {\n        this.setState({ notebooks: notebooks }, () => {\n          var bookIndex = editData.currentBookIndex || 0;\n          this.loadNotes(bookIndex);\n          if (editData.currentNoteId) {\n            this.loadNote(editData.currentNoteId);\n          }\n        });\n      })\n  }\n\n  loadNotes(bookIndex) {\n    this.setState({ currentBookIndex: bookIndex });\n    var data = this.state.notebooks;\n    var book = data[bookIndex];\n    request('/notes?notebookId=' + book.id)\n      .then(notes => {\n        this.setState({ notes: notes });\n      }) \n  }\n\n  reloadNotes() {\n    var bookIndex = this.state.currentBookIndex;\n    this.loadNotes(bookIndex);\n  }\n\n  loadNote(id) {\n    request('/notes/' + id)\n      .then(note => {\n        console.log(note)\n        this.setState({ currentNote: note });\n      })  \n  }\n\n  getNoteBook(bookId) {\n    var books = this.state.notebooks;\n    return books.find(book => book.id === bookId);\n    // return books.find(function(book) {\n    //   return book.id === bookId;\n    // });\n  }\n\n  updateNote(field, value) {\n    var note = this.state.currentNote;\n    note[field] = value;\n    this.setState({ note: note});\n\n    var opts = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    }\n    request('/notes/' + note.id, opts)\n      .then(data => {\n        console.log('success!', data);\n      })  \n  }\n\n  addNote() {\n    var currentBook = this.state.notebooks[this.state.currentBookIndex];\n    var note = {\n      title: '新建笔记',\n      body: '',\n      datetime: new Date().toString(),\n      notebookId: currentBook.id\n    };\n\n    var opts = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    }\n\n    request('/notes/', opts)\n      .then(data => {\n        this.reloadNotes();\n      })  \n  }\n\n  deleteNote(id) {\n    Swal.fire({\n      title: '确定要删除吗？',\n      type: 'question',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: '确定',\n      cancelButtonText: '取消'\n    }).then((result) => {\n      if (result.value) {\n        this.doDeleteNote(id);\n      }\n    })\n  }\n\n  doDeleteNote(id) {\n    var opts = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    request('/notes/' + id, opts)\n      .then(data => {\n        this.reloadNotes();\n      })  \n  }\n}\n\nexport default App;\n\n\nfunction getBrief(body) {\n  body = body || '';\n  return body.length > 100 ? body.substr(0, 70) + '...' : '';\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}